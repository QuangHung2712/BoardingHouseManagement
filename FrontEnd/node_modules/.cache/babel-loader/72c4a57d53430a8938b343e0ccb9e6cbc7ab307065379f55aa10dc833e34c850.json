{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport pageheader from \"@/components/page-header.vue\";\nimport apiClient from \"@/plugins/axios\";\nimport CryptoJS from 'crypto-js';\nexport default {\n  name: \"PRODUCT-LIST\",\n  components: {\n    pageheader\n  },\n  data() {\n    return {\n      viewdialog: false,\n      titleDialog: '',\n      form: false,\n      towerId: 0,\n      message: '',\n      snackbar: false,\n      snackbarColor: '',\n      searchStratDate: null,\n      searchEndDate: null,\n      ElectricChat: [],\n      chartOptions: {\n        chart: {\n          type: 'bar',\n          height: 350\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '55%'\n          }\n        },\n        xaxis: {\n          categories: [],\n          title: {\n            text: 'Tháng'\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Doanh thu'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        colors: ['#4285F4'] // Màu cột\n      },\n      chartSeries: [{\n        name: 'Doanh thu',\n        data: []\n      }]\n    };\n  },\n  mounted() {\n    this.initializeChart();\n  },\n  created() {\n    const idtower = this.$route.params.idtower;\n    const DecodingIdTower = CryptoJS.enc.Utf8.stringify(CryptoJS.enc.Base64.parse(idtower));\n    this.towerId = DecodingIdTower;\n  },\n  methods: {\n    initializeChart() {\n      // Gán dữ liệu cho biểu đồ\n      this.chartOptions.xaxis.categories =\n      //this.ElectricChat.map((item) => `Tháng ${item.month}`);\n      this.chartSeries[0].data = this.ElectricChat.map(item => item.quantity);\n    },\n    ViewReport() {\n      const [startYear, startMonth] = this.searchStratDate.split(\"-\");\n      const StratDate = `${startYear}-${startMonth}-01`;\n      const [endYear, endMonth] = this.searchEndDate.split(\"-\");\n      const lastDayOfMonth = new Date(endYear, endMonth, 0).getDate();\n      const EndDate = `${endYear}-${endMonth}-${lastDayOfMonth}`;\n      apiClient.get(`/Tower/ReportByTower`, {\n        params: {\n          towerId: this.towerId,\n          stratDate: StratDate,\n          endDate: EndDate\n        }\n      }).then(response => {\n        this.ElectricChat = response.data;\n        this.initializeChart();\n        console.log(this.chartOptions.xaxis.categories);\n      }).catch(error => {\n        this.message = \"Báo cáo bị lỗi: \" + error.response?.data?.message || error;\n        this.snackbar = true;\n        this.snackbarColor = 'red';\n      });\n    }\n  }\n};","map":{"version":3,"names":["pageheader","apiClient","CryptoJS","name","components","data","viewdialog","titleDialog","form","towerId","message","snackbar","snackbarColor","searchStratDate","searchEndDate","ElectricChat","chartOptions","chart","type","height","plotOptions","bar","horizontal","columnWidth","xaxis","categories","title","text","yaxis","dataLabels","enabled","colors","chartSeries","mounted","initializeChart","created","idtower","$route","params","DecodingIdTower","enc","Utf8","stringify","Base64","parse","methods","map","item","quantity","ViewReport","startYear","startMonth","split","StratDate","endYear","endMonth","lastDayOfMonth","Date","getDate","EndDate","get","stratDate","endDate","then","response","console","log","catch","error"],"sources":["D:\\Code\\BoardingHouseManagement\\BoardingHouseManagement\\FrontEnd\\src\\views\\Manage\\Page\\Report.vue"],"sourcesContent":["<script>\r\n    import pageheader from \"@/components/page-header.vue\"\r\n    import apiClient from \"@/plugins/axios\";\r\n    import CryptoJS from 'crypto-js';\r\n\r\n\r\n    export default {\r\n        name: \"PRODUCT-LIST\",\r\n        components: {\r\n            pageheader\r\n        },\r\n        data(){\r\n            return{\r\n                viewdialog: false,\r\n                titleDialog:'',\r\n                form: false,\r\n                towerId: 0,\r\n                message: '',\r\n                snackbar: false,\r\n                snackbarColor: '',\r\n                searchStratDate: null,\r\n                searchEndDate: null,\r\n                ElectricChat: [\r\n                ],\r\n                chartOptions: {\r\n                    chart: {\r\n                        type: 'bar',\r\n                        height: 350,\r\n                    },\r\n                    plotOptions: {\r\n                        bar: {\r\n                            horizontal: false,\r\n                            columnWidth: '55%',\r\n                        },\r\n                    },\r\n                    xaxis: {\r\n                        categories: [],\r\n                        title: {\r\n                            text: 'Tháng',\r\n                        },\r\n                    },\r\n                    yaxis: {\r\n                        title: {\r\n                            text: 'Doanh thu',\r\n                        },\r\n                    },\r\n                    dataLabels: {\r\n                        enabled: false,\r\n                    },\r\n                    colors: ['#4285F4'], // Màu cột\r\n                },\r\n                chartSeries: [\r\n                    {\r\n                        name: 'Doanh thu',\r\n                        data: [],\r\n                    },\r\n                ],\r\n            }\r\n        },\r\n        mounted() {\r\n            this.initializeChart();\r\n        },\r\n        created(){\r\n            const idtower = this.$route.params.idtower;\r\n            const DecodingIdTower = CryptoJS.enc.Utf8.stringify(CryptoJS.enc.Base64.parse(idtower));\r\n            this.towerId = DecodingIdTower;\r\n        },\r\n        methods:{\r\n            initializeChart() {\r\n                // Gán dữ liệu cho biểu đồ\r\n                this.chartOptions.xaxis.categories =  //this.ElectricChat.map((item) => `Tháng ${item.month}`);\r\n                this.chartSeries[0].data = this.ElectricChat.map(item=>item.quantity);\r\n            },\r\n            ViewReport(){\r\n                const [startYear, startMonth] = this.searchStratDate.split(\"-\");\r\n                const StratDate = `${startYear}-${startMonth}-01`;\r\n                const [endYear, endMonth] = this.searchEndDate.split(\"-\");\r\n                const lastDayOfMonth = new Date(endYear, endMonth, 0).getDate();\r\n                const EndDate = `${endYear}-${endMonth}-${lastDayOfMonth}`;\r\n                apiClient.get(`/Tower/ReportByTower`,{\r\n                    params: {\r\n                        towerId: this.towerId,\r\n                        stratDate: StratDate,\r\n                        endDate: EndDate,\r\n                    },\r\n                })\r\n                .then(response=>{\r\n                    this.ElectricChat = response.data;\r\n                    this.initializeChart()\r\n                    console.log(this.chartOptions.xaxis.categories)\r\n                })\r\n                .catch(error=>{\r\n                    this.message = \"Báo cáo bị lỗi: \" + error.response?.data?.message || error;\r\n                    this.snackbar = true;\r\n                    this.snackbarColor = 'red';\r\n                })\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<template>\r\n    <pageheader title=\"\" pageTitle=\"Báo cáo\" />\r\n    <v-snackbar\r\n        v-model=\"snackbar\"\r\n        :timeout=\"10000\"\r\n        class=\"custom-snackbar\"\r\n        :color=\"snackbarColor\"\r\n    >\r\n        <h5 class=\"text-center\">{{ message }}</h5>\r\n    </v-snackbar>\r\n    <BCard>\r\n        <BCardBody class=\"p-0\">\r\n            <BRow>\r\n                <BCol class=\"col-sm-4\">\r\n                    <div class=\"form-group m-0\">\r\n                        <label class=\"form-label m-0\">Từ ngày:</label>\r\n                        <input type=\"month\" class=\"form-control\" id=\"example-datemin\" v-model=\"searchStratDate\" min=\"2000-01-02\" placeholder=\"Tìm kiếm từ ngày\">\r\n                    </div>\r\n                </BCol>\r\n                <BCol class=\"col-sm-4\">\r\n                    <div class=\"form-group m-0\">\r\n                        <label class=\"form-label m-0\">Từ ngày:</label>\r\n                        <input type=\"month\" class=\"form-control\" id=\"example-datemin\" v-model=\"searchEndDate\" min=\"2000-01-02\" placeholder=\"Tìm kiếm từ ngày\">\r\n                    </div>\r\n                </BCol>\r\n                <BCol class=\"col-sm-4 d-flex align-end justify-center\">\r\n                    <v-btn color=\"blue-lighten-1\" class=\"mt-2\" @click=\"ViewReport()\">Xem báo cáo</v-btn>\r\n                </BCol>\r\n            </BRow>\r\n        </BCardBody>\r\n    </BCard>\r\n    <BCard>\r\n        <BCardHeader class=\"p-2\">\r\n            <h4>Doanh thu</h4>\r\n        </BCardHeader>\r\n        <BCardBody class=\"p-0\">\r\n            <div class=\"overview-product-legends text-center\">\r\n                <p class=\"text-muted mb-1\"><span>Tổng doanh thu</span></p>\r\n                <h4 class=\"mb-0\">{{ chartSeries[0].data.reduce((a, b) => a + b, 0) }}</h4>\r\n            </div>\r\n            <apexchart type=\"bar\" :options=\"chartOptions\" :series=\"chartSeries\"></apexchart>\r\n        </BCardBody>\r\n    </BCard>\r\n</template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}