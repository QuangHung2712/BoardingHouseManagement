{"ast":null,"code":"import apiClient from \"@/plugins/axios\";\nimport { formatTablePrice } from \"@/components/common/JavaScripCommon\";\nimport store from \"../../state/store\";\nexport default {\n  name: \"LANDING\",\n  components: {},\n  data() {\n    return {\n      length: 3,\n      window: 0,\n      currentSlide: 0,\n      visible: false,\n      index: 0,\n      postData: {},\n      message: '',\n      snackbar: false,\n      snackbarColor: '',\n      customerId: 0\n    };\n  },\n  created() {\n    const postId = this.$route.params.idpost;\n    this.customerId = store.getters['getCustomerId'];\n    this.GetDetailPost(postId);\n  },\n  methods: {\n    showImg(index) {\n      this.index = index;\n      this.visible = true;\n    },\n    handleHide() {\n      this.visible = false;\n    },\n    GetDetailPost(postId) {\n      apiClient.get(`/Post/GetDetailFindPeople?postId=${postId}&customerId=${this.customerId}`).then(response => {\n        this.postData = response.data;\n        console.log(response.data);\n      }).catch(error => {\n        this.message = \"Lấy thông tin bài đăng bị lỗi: \" + error.response?.data?.message || error;\n        this.snackbar = true;\n        this.snackbarColor = 'red';\n      });\n    },\n    FormatPrice(price) {\n      return formatTablePrice(price);\n    },\n    GoToInfoZalo() {\n      const url = 'https://zalo.me/' + this.postData.sdtZalo;\n      window.open(url, '_blank');\n    },\n    copyCurrentURL() {\n      // Lấy URL hiện tại từ trình duyệt\n      const currentURL = window.location.href;\n\n      // Sử dụng Clipboard API để sao chép\n      navigator.clipboard.writeText(currentURL).then(() => {\n        // Hiển thị thông báo thành công\n        this.message = \"Đường dẫn đã được sao chép vào clipboard!\";\n        this.snackbar = true;\n        this.snackbarColor = 'green';\n      }).catch(error => {\n        // Hiển thị thông báo lỗi nếu có\n        this.message = `Không thể sao chép đường dẫn: ${error}`;\n        this.snackbar = true;\n        this.snackbarColor = 'red';\n      });\n    },\n    Savepost(postId, status) {\n      // Đặt trạng thái đang xử lý\n      this.postData.isProcessing = true;\n\n      // Gửi yêu cầu API\n      apiClient.put(`/Post/SavePost?customerId=${this.customerId}&postId=${postId}&status=${status}`).then(() => {\n        // Cập nhật trạng thái `isSave` sau khi API trả về thành công\n        this.postData.isSave = !this.postData.isSave;\n\n        // Hiển thị thông báo thành công\n        this.snackbar = true;\n        this.snackbarColor = \"green\";\n        this.message = \"Xoá phòng thành công\";\n      }).catch(error => {\n        // Xử lý lỗi\n        this.message = \"Lưu phòng đã xảy ra lỗi: \" + (error.response?.data?.message || error.message || \"Không xác định\");\n        this.snackbar = true;\n        this.snackbarColor = \"red\";\n        this.postData.isProcessing = false;\n      }).finally(() => {\n        // Đặt lại trạng thái xử lý\n        this.postData.isProcessing = false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["apiClient","formatTablePrice","store","name","components","data","length","window","currentSlide","visible","index","postData","message","snackbar","snackbarColor","customerId","created","postId","$route","params","idpost","getters","GetDetailPost","methods","showImg","handleHide","get","then","response","console","log","catch","error","FormatPrice","price","GoToInfoZalo","url","sdtZalo","open","copyCurrentURL","currentURL","location","href","navigator","clipboard","writeText","Savepost","status","isProcessing","put","isSave","finally"],"sources":["D:\\Du_An\\BoardingHouseManagement\\FrontEnd\\src\\views\\FindRoom\\DetailPost.vue"],"sourcesContent":["<style scoped>\r\n    .thumbnail-container {\r\n        cursor: pointer;\r\n        padding: 4px;\r\n    }\r\n\r\n    .thumbnail {\r\n        border: 2px solid transparent;\r\n        border-radius: 8px;\r\n        transition: 0.3s;\r\n    }\r\n\r\n    .thumbnail.active {\r\n        border-color: #1976d2; /* Màu xanh Vuetify */\r\n        box-shadow: 0 0 8px rgba(25, 118, 210, 0.7);\r\n    }\r\n\r\n    .thumbnail {\r\n        width: 50px;\r\n        height: 50px; \r\n    }\r\n    .item{\r\n        background-color: #f1f4f6;\r\n    }\r\n    .d-grid button{\r\n        font-size: 18px;\r\n    }\r\n    .customBtn{\r\n        background-color: green;\r\n        border-color: green;\r\n    }\r\n    .saved-button {\r\n        color: red !important; /* Màu chữ trắng */\r\n    }\r\n</style>\r\n<script>\r\n    import apiClient from \"@/plugins/axios\";\r\n    import { formatTablePrice } from \"@/components/common/JavaScripCommon\"\r\n    import store from \"../../state/store\";\r\n\r\n\r\n    export default {\r\n        name: \"LANDING\",\r\n        components: {\r\n        },\r\n    data() {\r\n        return{\r\n            length: 3,\r\n            window: 0,\r\n            currentSlide: 0,\r\n            visible: false,\r\n            index: 0,\r\n            postData:{},\r\n            message: '',\r\n            snackbar: false,\r\n            snackbarColor: '',\r\n            customerId:0,\r\n        }\r\n    },\r\n    created(){\r\n        const postId = this.$route.params.idpost;\r\n        this.customerId = store.getters['getCustomerId'];\r\n        this.GetDetailPost(postId);\r\n    },\r\n    methods:{\r\n        showImg(index) {\r\n            this.index = index;\r\n            this.visible = true;\r\n        },\r\n        handleHide() {\r\n            this.visible = false;\r\n        },\r\n        GetDetailPost(postId){\r\n            apiClient.get(`/Post/GetDetailFindPeople?postId=${postId}&customerId=${this.customerId}`)\r\n                .then(response=>{\r\n                    this.postData = response.data;\r\n                    console.log(response.data);\r\n                })\r\n                .catch(error=>{\r\n                    this.message = \"Lấy thông tin bài đăng bị lỗi: \" + error.response?.data?.message || error;\r\n                    this.snackbar = true;\r\n                    this.snackbarColor = 'red';\r\n                })\r\n        },\r\n        FormatPrice(price){\r\n            return formatTablePrice (price);\r\n        },\r\n        GoToInfoZalo(){\r\n            const url = 'https://zalo.me/' + this.postData.sdtZalo;\r\n            window.open(url,'_blank');\r\n        },\r\n        copyCurrentURL(){\r\n            // Lấy URL hiện tại từ trình duyệt\r\n            const currentURL = window.location.href;\r\n\r\n            // Sử dụng Clipboard API để sao chép\r\n            navigator.clipboard\r\n            .writeText(currentURL)\r\n            .then(() => {\r\n                // Hiển thị thông báo thành công\r\n                this.message = \"Đường dẫn đã được sao chép vào clipboard!\"\r\n                this.snackbar = true;\r\n                this.snackbarColor = 'green';\r\n            })\r\n            .catch((error) => {\r\n                // Hiển thị thông báo lỗi nếu có\r\n                this.message = `Không thể sao chép đường dẫn: ${error}`;\r\n                this.snackbar = true;\r\n                this.snackbarColor = 'red';\r\n            });\r\n        },\r\n        Savepost(postId,status){\r\n            // Đặt trạng thái đang xử lý\r\n            this.postData.isProcessing = true;\r\n\r\n            // Gửi yêu cầu API\r\n            apiClient\r\n            .put(`/Post/SavePost?customerId=${this.customerId}&postId=${postId}&status=${status}`)\r\n            .then(() => {\r\n                // Cập nhật trạng thái `isSave` sau khi API trả về thành công\r\n                this.postData.isSave = !this.postData.isSave;\r\n\r\n                // Hiển thị thông báo thành công\r\n                this.snackbar = true;\r\n                this.snackbarColor = \"green\";\r\n                this.message = \"Xoá phòng thành công\";\r\n            })\r\n            .catch((error) => {\r\n                // Xử lý lỗi\r\n                this.message =\r\n                \"Lưu phòng đã xảy ra lỗi: \" +\r\n                (error.response?.data?.message || error.message || \"Không xác định\");\r\n                this.snackbar = true;\r\n                this.snackbarColor = \"red\";\r\n                this.postData.isProcessing = false;\r\n            })\r\n            .finally(() => {\r\n                // Đặt lại trạng thái xử lý\r\n                this.postData.isProcessing = false;\r\n            });\r\n        },\r\n    }\r\n}\r\n</script>\r\n<template>\r\n        <v-snackbar\r\n            v-model=\"snackbar\"\r\n            :timeout=\"10000\"\r\n            class=\"custom-snackbar\"\r\n            :color=\"snackbarColor\"\r\n        >\r\n            <h5 class=\"text-center\">{{ message }}</h5>\r\n        </v-snackbar>\r\n<v-container>\r\n    <v-row class=\"m-4\"> \r\n            <v-col cols=\"1\" xxl=\"1\"></v-col>\r\n            <v-col cols=\"10\" xxl=\"10\">\r\n                <BRow>\r\n                    <BCol class=\"col-lg-8\">\r\n                        <BCard no-body class=\"mt-2\">\r\n                            <v-row justify=\"center\" class=\"m-0\" >\r\n                                <!-- Carousel chính -->\r\n                                <v-carousel v-model=\"currentSlide\" hide-delimiters show-arrows=\"hover\" height=\"480\" class=\"item\" >\r\n                                    <v-carousel-item v-for=\"(item, index) in postData.pathImgRoom\" :key=\"index\">\r\n                                        <v-img :src=\"item\" @click=\"showImg(index)\" />\r\n                                    </v-carousel-item>\r\n                                </v-carousel>\r\n\r\n                                <!-- Thumbnails -->\r\n                                <v-row justify=\"center\" class=\"m-0\">\r\n                                    <div\r\n                                    v-for=\"(item, index) in postData.pathImgRoom\" :key=\"index\"\r\n                                    @click=\"currentSlide = index\"\r\n                                    class=\"thumbnail-container\"\r\n                                    >\r\n                                    <v-img\r\n                                        :src=\"item\"\r\n                                        :alt=\"'Ảnh phòng ' + index \"\r\n                                        class=\"thumbnail\"\r\n                                        :class=\"{ active: currentSlide === index }\"\r\n                                    />\r\n                                    </div>\r\n                                </v-row>\r\n                            </v-row>\r\n                        </BCard>\r\n                        <BCard>\r\n                            <BCardHeader >\r\n                                <h4>{{ postData.name }}</h4>\r\n                                <p><v-icon>mdi-map-marker-radius</v-icon>{{ postData.address }}</p>\r\n                                <h3>Giá: <span style=\"color: red;\">{{ postData.priceRoom }}</span></h3>\r\n                            </BCardHeader>\r\n                            <BCardBody class=\"p-0 py-3\">\r\n                                <h4>Giới tính: {{ postData.gender}}</h4>\r\n                                <p>Các thiết bị của phòng: {{ postData.device }} </p>\r\n                                <h4>Thông tin dịch vụ</h4>\r\n                                <h4>Mô tả</h4>\r\n                                <p>{{ moTa }}</p>\r\n                            </BCardBody>\r\n                        </BCard>\r\n                    </BCol>\r\n                    <BCol class=\"col-lg-4\">\r\n                        <BCard class=\"statistics-card-1\" no-body>\r\n                            <BCardBody class=\"text-center\">\r\n                                <div class=\"chat-avtar d-inline-flex mx-auto\">\r\n                                    <img class=\"rounded-circle img-fluid wid-90 img-thumbnail\"\r\n                                        :src=\"postData.landlordAvata\" alt=\"User image\">\r\n                                </div>\r\n                                <h5 class=\"mb-0\">{{ postData.landlordName }}</h5>\r\n                                <div class=\"d-grid gap-2 mt-3 \">\r\n                                    <BButton class=\"customBtn\"><v-icon class=\"mr-2\">mdi-phone</v-icon>{{ postData.sdtLandlord }}</BButton>\r\n                                </div>\r\n                                <div class=\"d-grid gap-2 mt-3\">\r\n                                    <BButton variant=\"primary\" @click=\"GoToInfoZalo\"><v-icon class=\"mr-2\">mdi-chat-processing-outline</v-icon>Nhắn tin Zalo</BButton>\r\n                                </div>\r\n                                <div class=\"d-flex justify-space-evenly mt-3\">\r\n                                    <!-- <BButton variant=\"white\" class=\"p-0\"><v-icon >mdi-heart-outline</v-icon>Lưu phòng</BButton> -->\r\n                                    <BButton variant=\"white\" class=\"p-0\" :class=\"{'saved-button': postData.isSave}\" @click=\"Savepost(postData.id,postData.isSave)\">\r\n                                        <v-icon class=\"mr-2\" v-if=\"!postData.isProcessing\">mdi-heart</v-icon>\r\n                                        \r\n                                        <v-progress-circular\r\n                                        v-else\r\n                                        indeterminate\r\n                                        color=\"white\"\r\n                                        size=\"20\"\r\n                                        ></v-progress-circular>\r\n                                        Lưu phòng\r\n                                    </BButton>\r\n                                    <BButton variant=\"white\" class=\"p-0\" @click=\"copyCurrentURL\"><v-icon class=\"mr-2\">mdi-share-variant</v-icon>Chia sẻ phòng</BButton>\r\n                                </div>\r\n                            </BCardBody>\r\n                        </BCard>\r\n                    </BCol>\r\n                </BRow>\r\n            </v-col>\r\n            <v-col cols=\"1\" xxl=\"1\"></v-col>\r\n        </v-row>\r\n</v-container>\r\n    <vue-easy-lightbox :visible=\"visible\" :imgs=\"postData.pathImgRoom\" :index=\"index\" @hide=\"handleHide\"></vue-easy-lightbox>\r\n</template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}