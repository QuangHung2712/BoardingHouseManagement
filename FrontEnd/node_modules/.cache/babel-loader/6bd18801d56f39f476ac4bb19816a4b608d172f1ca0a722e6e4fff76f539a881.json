{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from \"@/plugins/axios\";\nimport store from \"../../state/store\";\nimport CryptoJS from 'crypto-js';\nexport default {\n  data() {\n    return {\n      postData: [],\n      customerId: 0\n    };\n  },\n  created() {\n    this.customerId = store.getters['getCustomerId'] ?? 0;\n    this.GetAllPost();\n  },\n  methods: {\n    GetAllPost() {\n      apiClient.get(`/Post/GetByCustomer?customerId=${this.customerId}`).then(response => {\n        this.postData = response.data;\n        console.log(this.postData);\n      }).catch(error => {\n        this.message = \"Lấy danh sách phòng lưu bị lỗi \" + error;\n        this.snackbar = true;\n        this.snackbarColor = 'red';\n      });\n    },\n    Edit(postId) {\n      const encryptedId = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(postId));\n      this.$router.push({\n        name: 'detailpost',\n        params: {\n          idpost: encryptedId\n        }\n      });\n    },\n    Delete(postId) {\n      apiClient.delete(`/Post/Delete/${postId}`).then(() => {\n        this.message = \"Xóa bài đăng thành công\";\n        this.snackbar = true;\n        this.snackbarColor = 'green';\n        this.GetAllPost();\n      }).catch(error => {\n        this.message = \"Xóa bài đăng lỗi: \" + error;\n        this.snackbar = true;\n        this.snackbarColor = 'red';\n      });\n    },\n    Found(postId) {\n      apiClient.put(`/Post/Found?postId=${postId}`).then(() => {\n        this.message = \"Hủy tìm người thành công\";\n        this.snackbar = true;\n        this.snackbarColor = 'green';\n        this.GetAllPost();\n      }).catch(error => {\n        this.message = \"Hủy tìm người lỗi: \" + error;\n        this.snackbar = true;\n        this.snackbarColor = 'red';\n      });\n    },\n    Repost(postId) {\n      apiClient.put(`/Post/Repost?postId=${postId}`).then(() => {\n        this.message = \"Đăng lại thành công\";\n        this.snackbar = true;\n        this.snackbarColor = 'green';\n        this.GetAllPost();\n      }).catch(error => {\n        this.message = \"Đăng lại lỗi: \" + error;\n        this.snackbar = true;\n        this.snackbarColor = 'red';\n      });\n    }\n  }\n};","map":{"version":3,"names":["apiClient","store","CryptoJS","data","postData","customerId","created","getters","GetAllPost","methods","get","then","response","console","log","catch","error","message","snackbar","snackbarColor","Edit","postId","encryptedId","enc","Base64","stringify","Utf8","parse","$router","push","name","params","idpost","Delete","delete","Found","put","Repost"],"sources":["D:\\Du_An\\BoardingHouseManagement\\FrontEnd\\src\\views\\FindRoom\\ListPost.vue"],"sourcesContent":["<script>\r\n    import apiClient from \"@/plugins/axios\";\r\n    import store from \"../../state/store\";\r\n    import CryptoJS from 'crypto-js';\r\n\r\n    export default {\r\n        data(){\r\n            return{\r\n                postData:[],\r\n                customerId: 0,\r\n            }\r\n        },\r\n        created(){\r\n            this.customerId = store.getters['getCustomerId'] ?? 0;\r\n            this.GetAllPost();\r\n            \r\n        },\r\n        methods:{\r\n            GetAllPost(){\r\n                apiClient.get(`/Post/GetByCustomer?customerId=${this.customerId}`)\r\n                    .then(response=>{\r\n                        this.postData = response.data;\r\n                        console.log(this.postData);\r\n                    })\r\n                    .catch(error=>{\r\n                        this.message = \"Lấy danh sách phòng lưu bị lỗi \" + error;\r\n                        this.snackbar = true;\r\n                        this.snackbarColor = 'red';\r\n                    })\r\n            },\r\n            Edit(postId){\r\n                const encryptedId = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(postId));\r\n                this.$router.push({ name: 'detailpost', params: { idpost: encryptedId } });\r\n            },\r\n            Delete(postId){\r\n                apiClient.delete(`/Post/Delete/${postId}`)\r\n                        .then(()=>{\r\n                            this.message = \"Xóa bài đăng thành công\" ;\r\n                            this.snackbar = true;\r\n                            this.snackbarColor = 'green';\r\n                            this.GetAllPost();\r\n                        })\r\n                        .catch(error=>{\r\n                            this.message = \"Xóa bài đăng lỗi: \" + error;\r\n                            this.snackbar = true;\r\n                            this.snackbarColor = 'red';\r\n                        })\r\n            },\r\n            Found(postId){\r\n                apiClient.put(`/Post/Found?postId=${postId}`)\r\n                        .then(()=>{\r\n                            this.message = \"Hủy tìm người thành công\" ;\r\n                            this.snackbar = true;\r\n                            this.snackbarColor = 'green';\r\n                            this.GetAllPost();\r\n                        })\r\n                        .catch(error=>{\r\n                            this.message = \"Hủy tìm người lỗi: \" + error;\r\n                            this.snackbar = true;\r\n                            this.snackbarColor = 'red';\r\n                        })\r\n            },\r\n            Repost(postId){\r\n                apiClient.put(`/Post/Repost?postId=${postId}`)\r\n                        .then(()=>{\r\n                            this.message = \"Đăng lại thành công\" ;\r\n                            this.snackbar = true;\r\n                            this.snackbarColor = 'green';\r\n                            this.GetAllPost();\r\n                        })\r\n                        .catch(error=>{\r\n                            this.message = \"Đăng lại lỗi: \" + error;\r\n                            this.snackbar = true;\r\n                            this.snackbarColor = 'red';\r\n                        })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<template>\r\n        <v-container>\r\n            <v-snackbar\r\n                v-model=\"snackbar\"\r\n                :timeout=\"10000\"\r\n                class=\"custom-snackbar\"\r\n                :color=\"snackbarColor\"\r\n            >\r\n                <h5 class=\"text-center\">{{ message }}</h5>\r\n            </v-snackbar>\r\n            <v-row>\r\n                <v-col md=\"2\"></v-col>\r\n                <h1 v-if=\"postData == 0\">Bạn không có bài đăng nào</h1>\r\n                <v-col cols=\"12\" md=\"8\" v-else>\r\n                    <h3>Danh sách các bài đăng của bạn</h3>\r\n                    <BCard no-body v-for=\"(post,index) in postData\" :key=\"index\">\r\n                        <BCardBody class=\"p-0\">\r\n                            <BRow>\r\n                                <BCol class=\"col-md-4 col-12\">\r\n                                    <v-window style=\"height: 100%;\"\r\n                                        v-model=\"post.selectfile\"\r\n                                        show-arrows\r\n                                        theme=\"dark\"\r\n                                    >\r\n                                        <v-window-item\r\n                                        v-for=\"(file,n) in post.pathImgRoom\"\r\n                                        :key=\"n\"\r\n                                        >\r\n                                        <v-card class=\"d-flex justify-center align-center\" height=\"200px\">\r\n                                            <v-img\r\n                                                :src=\"file\"\r\n                                                alt=\"Room Image\"\r\n                                                aspect-ratio=\"16/9\"\r\n                                                class=\"rounded elevation-2\"\r\n                                                contain\r\n                                            ></v-img>\r\n                                        </v-card>\r\n                                        </v-window-item>\r\n                                    </v-window>\r\n                                </BCol>\r\n                                <BCol class=\"col-md-8 col-12 mt-4\">\r\n                                    <button to=\"/detail\" class=\"text-left\">\r\n                                        <h4> {{ post.name }} </h4>\r\n                                        <h5>Giá: <span style=\"color: red;\">{{ post.price }}</span></h5>\r\n                                        <p><v-icon>mdi-map-marker-radius</v-icon> {{ post.address }}</p>\r\n                                        <p>Giới tính: {{ post.gender }}</p>\r\n                                    </button>\r\n                                    <div class=\"text-right\">\r\n                                        <BButton variant=\"white\" @click=\"GotoDetail(post.id)\"><v-icon size=\"24\">mdi-eye</v-icon></BButton>\r\n                                        <BButton variant=\"white\" @click=\"Edit(post.id)\"><v-icon size=\"24\">mdi-pencil</v-icon></BButton>\r\n                                        <BButton variant=\"white\" @click=\"Delete(post.id)\"><v-icon size=\"24\">mdi-delete</v-icon></BButton>\r\n                                        <BButton variant=\"white\" v-if=\"post.status == false\" @click=\"Found(post.id)\"><v-icon size=\"24\">mdi-account-multiple-remove</v-icon></BButton>\r\n                                        <BButton variant=\"white\" v-else @click=\"Repost(post.id)\"><v-icon size=\"24\">mdi-account-multiple-plus</v-icon></BButton>\r\n                                    </div>\r\n                                </BCol>\r\n                            </BRow>\r\n                        </BCardBody>\r\n                    </BCard>\r\n                </v-col>\r\n            </v-row>\r\n        </v-container>\r\n</template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}